package com.example.visual;

import org.junit.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import com.github.romankh3.image.comparison.ImageComparison;
import com.github.romankh3.image.comparison.ImageComparisonUtil;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.ExpectedConditions;

import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;
import java.time.Duration;

public class AiVisualTest {

    private WebDriver driver;
    private static final String BASELINE = "baseline.png";
    private static final String CURRENT = "current.png";
    private static final String DIFF = "diff.png";

    @BeforeClass
    public static void setUpClass() {
        // Set up once for the class if needed
    }

    @AfterClass
    public static void tearDownClass() {
        // Clean up once for the class if needed
    }

    @Before
    public void setUp() {
        // If ChromeDriver not in PATH, set System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
    }

    @After
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }

    @Test
    public void testGoogleHomeVisual() throws IOException {
        driver.get("https://www.google.com");

        // Wait for the page to load completely
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        wait.until(ExpectedConditions.presenceOfElementLocated(By.tagName("body")));

        File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        File currentFile = new File(CURRENT);
        org.apache.commons.io.FileUtils.copyFile(screenshot, currentFile);

        File baselineFile = new File(BASELINE);
        if (!baselineFile.exists()) {
            // Create baseline if it doesn't exist
            org.apache.commons.io.FileUtils.copyFile(currentFile, baselineFile);
            Assert.fail("Baseline image created. Re-run the test to compare.");
        }

        // Compare images
        ImageComparison comparison = new ImageComparison(
                ImageIO.read(baselineFile),
                ImageIO.read(currentFile)
        );

        // If there's a difference, a diff image is created
        comparison.setDestination(new File(DIFF));
        ImageComparisonUtil.ImageComparisonResult result = comparison.compareImages();

        if (result.getDifferencePercent() > 0.0) {
            Assert.fail("Visual differences found! Check diff.png");
        }
    }
}
